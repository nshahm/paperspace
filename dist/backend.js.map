{"version":3,"sources":["webpack:///backend.js","webpack:///webpack/bootstrap 1dc28732c3b3f090f9aa","webpack:///./app/server.ts","webpack:///external \"body-parser\"","webpack:///external \"express\""],"names":["require","install","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","express","bodyParser","app","use","urlencoded","extended","json","get","req","res","send","serverHost","process","env","HOST","serverPort","PORT","server","listen","host","address","port","console","log"],"mappings":"AAAAA,QAAQ,sBAAsBC,UACrB,SAAUC,GCGnB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDOM,SAASI,EAAQD,EAASH,GAE/B,YE7CD,IAAYW,GAAOX,EAAM,GACbY,EAAUZ,EAAM,GAEtBa,EAAMF,GAEZE,GAAIC,IAAIF,EAAWG,YAAaC,UAAU,KAC1CH,EAAIC,IAAIF,EAAWK,QAGnBJ,EAAIK,IAAI,cAAe,SAACC,EAASC,GAC7BA,EAAIC,KAAK,oCAGb,IAAMC,GAAaC,QAAQC,IAAIC,MAAQ,UACjCC,EAAaH,QAAQC,IAAIG,MAAQ,GAEnCC,EAASf,EAAIgB,OAAQH,EAAYJ,EAAY,WAC7C,GAAIQ,GAAcF,EAAOG,UAAUA,QAC/BC,EAAcJ,EAAOG,UAAUC,IAEnCC,SAAQC,IAAI,wCAAyCJ,EAAME,MF6CzD,SAAS5B,EAAQD,GGnEvBC,EAAAD,QAAAN,QAAA,gBHyEM,SAASO,EAAQD,GIzEvBC,EAAAD,QAAAN,QAAA","file":"backend.js","sourcesContent":["require(\"source-map-support\").install();\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar express = __webpack_require__(2);\n\tvar bodyParser = __webpack_require__(1);\n\tvar app = express();\n\tapp.use(bodyParser.urlencoded({ extended: false }));\n\tapp.use(bodyParser.json());\n\tapp.get('/paperspace', function (req, res) {\n\t    res.send('Hey, Paperspace app started....');\n\t});\n\tvar serverHost = process.env.HOST || '0.0.0.0';\n\tvar serverPort = process.env.PORT || 80;\n\tvar server = app.listen(serverPort, serverHost, function () {\n\t    var host = server.address().address;\n\t    var port = server.address().port;\n\t    console.log('Example app listening at http://%s:%s', host, port);\n\t});\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"body-parser\");\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"express\");\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** backend.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1dc28732c3b3f090f9aa\n **/","/// <reference path=\"../typings/main.d.ts\"/>\n\nimport * as express from \"express\";\nimport * as bodyParser from \"body-parser\";\n\nconst app = express();\n\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\n\n\napp.get('/paperspace', (req:any, res:any) => {\n    res.send('Hey, Paperspace app started....');\n});\n\nconst serverHost = process.env.HOST || '0.0.0.0';\nconst serverPort = process.env.PORT || 80\n\nvar server = app.listen (serverPort, serverHost, () => {\n    var host:string = server.address().address;\n    var port:number = server.address().port;\n\n    console.log('Example app listening at http://%s:%s', host, port);\n});\n\n\n/** WEBPACK FOOTER **\n ** ./app/server.ts\n **/","module.exports = require(\"body-parser\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"body-parser\"\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = require(\"express\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"express\"\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}